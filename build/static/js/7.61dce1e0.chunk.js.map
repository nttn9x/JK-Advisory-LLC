{"version":3,"sources":["atom/suppliers.atom.tsx","pages/private/third-party-risk/third-party-risk.atom.tsx","pages/private/third-party-risk/breaking-news/breaking-news.component.tsx","pages/private/third-party-risk/breaking-news/index.tsx","pages/private/third-party-risk/key-suppliers-news/index.tsx","pages/private/third-party-risk/key-suppliers-news/key-suppliers-news.component.tsx","pages/private/third-party-risk/chart-stock-price-data.component.tsx","pages/private/third-party-risk/chart-stock-price.hook.tsx","pages/private/third-party-risk/chart-stock-price.component.tsx","pages/private/third-party-risk/chart-sentiment-data.component.tsx","pages/private/third-party-risk/chart-sentiment.hook.tsx","pages/private/third-party-risk/chart-sentiment.component.tsx","pages/private/third-party-risk/third-party-risk.container.tsx","pages/private/third-party-risk/index.tsx","components/ui-own/news/news.component.tsx","components/ui-own/news/index.tsx","services/analytics.service.tsx","services/supplier.service.tsx","services/breaking_news.service.tsx","atom/index.tsx"],"names":["Dashboard","ChartStockPrice","dataList","atom","key","DATAS_VALUE","default","selector","DATAS_SELECT","get","useStyles","makeStyles","theme","createStyles","container","borderRadius","shape","backgroundColor","palette","grey","title","margin","spacing","paddingLeft","borderBottom","divider","row","rowBody","border","News","name","t","useTranslation","styles","useState","data","isLoading","isFirstLoad","localComp","setLocalComp","actionShowDialog","useProviderContext","fetchMyAPI","useCallback","supplier_name","a","prevState","apiGetBreakingNewsByNameList","console","log","useEffect","then","onClick","classes","apiGetThirdRiskManagements","chart","flex","ChartStockPriceData","time","refChart","useRef","ele","current","innerHTML","createChart","width","offsetWidth","height","areaSeries","addAreaSeries","topColor","bottomColor","lineColor","lineWidth","length","data_chart","i","datum","push","Time","value","Value","timeScale","resetTimeScale","fitContent","setData","className","ref","chartStockPrice","CHART_STOCKPRICE_VALUE","times","chartSentiment","CHART_SENTIMENT_VALUE","useChartStockPriceHook","useRecoilState","handleTimeChange","apiStockPrices","Object","keys","loading","display","flexDirection","marginBottom","fontSize","variant","align","gutterBottom","color","aria-label","map","e","useChartSentimentHook","apiSentiment","ChartSentiment","filter","news","supName","marginRight","avatar","textTransform","tabs","minHeight","tab","ThirdPartyRisk","thirdPartyRisk","state","setSupNames","apiGetAllSuppliers","arr","sups","active","supNames","tabIndex","fetchApi","item","xs","position","root","scrollButtons","indicatorColor","textColor","onChange","event","newValue","supplier","label","paddingBottom","paddingRight","cursor","padding","background","paper","action","hover","rowTitle","fontWeight","renderRow","CellMeasurerCache","fixedWidth","cache","clearAll","_renderRow","index","parent","style","columnIndex","rowIndex","input","measure","registerChild","body","summarize_text","substring","onLoad","classnames","rowCount","deferredMeasurementCache","rowHeight","rowRenderer","defaultProps","apiDefaultAnalytic","category_name","id","callApi","url","API_ROOT","params","res","apiAnalytic","API_MODULES","Suppliers","apiPutSupplier","method","apiGetKeySupplierNews","apiGetBreakingNews","BreakingNews","SupplierManagement","supplierManagement","SUPPLIER_NAME","THIRD_PARTY_RISK"],"mappings":"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","file":"static/js/7.61dce1e0.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\n\nexport enum Dashboard {\n  DATAS_SELECT = \"DATAS_SELECT\",\n  DATAS_VALUE = \"DATAS_VALUE\",\n}\n\nexport const dataList = atom({\n  key: Dashboard.DATAS_VALUE, // unique ID (with respect to other atoms/selectors)\n  default: [], // default value (aka initial value)\n});\n\nexport const selectDataList = selector({\n  key: Dashboard.DATAS_SELECT, // unique ID (with respect to other atoms/selectors)\n  get: ({ get }: any) => {\n    const data = get(dataList);\n\n    return data;\n  },\n});\n","// @ts-ignore\nimport { atom } from \"recoil\";\n\nexport enum ChartStockPrice {\n  CHART_STOCKPRICE_VALUE = \"CHART_STOCKPRICE_VALUE\",\n  CHART_SENTIMENT_VALUE = \"CHART_SENTIMENT_VALUE\",\n}\n\nexport const chartStockPrice = atom({\n  key: ChartStockPrice.CHART_STOCKPRICE_VALUE, // unique ID (with respect to other atoms/selectors)\n  default: {\n    isLoading: true,\n    isFirstLoad: true,\n    data: {},\n    times: [],\n    time: null,\n  }, // default value (aka initial value)\n});\n\nexport const chartSentiment = atom({\n  key: ChartStockPrice.CHART_SENTIMENT_VALUE, // unique ID (with respect to other atoms/selectors)\n  default: {\n    isLoading: true,\n    isFirstLoad: true,\n    data: {},\n    times: [],\n    time: null,\n  }, // default value (aka initial value)\n});\n","import React, { useEffect, useCallback, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport News from \"components/ui-own/news\";\n\nimport { apiGetBreakingNewsByNameList } from \"services/breaking_news.service\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { useProviderContext } from \"../../../../components/ui-own/new_detail/new_detail.context\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.grey[\"100\"],\n    },\n    title: {\n      margin: theme.spacing(1.5),\n      paddingLeft: theme.spacing(1.5),\n      borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    row: {\n      paddingLeft: theme.spacing(1.5),\n    },\n    rowBody: {\n      border: \"unset\",\n      backgroundColor: \"unset\",\n    },\n  })\n);\n\nconst BreakingNews: React.FC<any> = ({ name }) => {\n  const { t } = useTranslation();\n  const styles = useStyles();\n  const [localComp, setLocalComp] = useState({\n    data: [],\n    isLoading: false,\n    isFirstLoad: true,\n  });\n  const { actionShowDialog } = useProviderContext();\n\n  const fetchMyAPI = useCallback(async (supplier_name) => {\n    setLocalComp((prevState: any) => ({\n      ...prevState,\n      isLoading: true,\n    }));\n\n    let data: any = [];\n    try {\n      data = await apiGetBreakingNewsByNameList({\n        supplier_name,\n      });\n    } catch (e) {\n      console.log(\"Nguyen C: subcategories.component.tsx, F: e, N: error \", e);\n    }\n\n    setLocalComp((prevState: any) => ({\n      ...prevState,\n      data,\n      isLoading: false,\n      isFirstLoad: false,\n    }));\n  }, []);\n\n  useEffect(() => {\n    if (!name) {\n      return;\n    }\n    fetchMyAPI(name).then();\n  }, [name, fetchMyAPI]);\n\n  return (\n    <News\n      {...localComp}\n      onClick={actionShowDialog}\n      title={t(\"breaking_news\")}\n      classes={{\n        container: styles.container,\n        title: styles.title,\n        row: styles.row,\n        rowBody: styles.rowBody,\n      }}\n    />\n  );\n};\n\nexport default BreakingNews;\n","import News from \"./breaking-news.component\";\n\nexport default News;\n","import News from \"./key-suppliers-news.component\";\n\nexport default News;\n","import React, { useEffect, useCallback, useState } from \"react\";\n\nimport News from \"components/ui-own/news\";\n\nimport { apiGetThirdRiskManagements } from \"services/supplier.service\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { useProviderContext } from \"../../../../components/ui-own/new_detail/new_detail.context\";\n\nconst KeySuppliersNews: React.FC<any> = ({ name }) => {\n  const { t } = useTranslation();\n  const [localComp, setLocalComp] = useState({\n    data: [],\n    isLoading: false,\n    isFirstLoad: true,\n  });\n  const { actionShowDialog } = useProviderContext();\n\n  const fetchMyAPI = useCallback(async (supplier_name) => {\n    setLocalComp((prevState: any) => ({\n      ...prevState,\n      isLoading: true,\n    }));\n\n    let data: any = [];\n    try {\n      data = await apiGetThirdRiskManagements({\n        supplier_name,\n      });\n    } catch (e) {\n      console.log(\"Nguyen C: subcategories.component.tsx, F: e, N: error \", e);\n    }\n\n    setLocalComp((prevState: any) => ({\n      ...prevState,\n      data,\n      isLoading: false,\n      isFirstLoad: false,\n    }));\n  }, []);\n\n  useEffect(() => {\n    if (!name) {\n      return;\n    }\n    fetchMyAPI(name).then();\n  }, [name, fetchMyAPI]);\n\n  return (\n    <News {...localComp} onClick={actionShowDialog} title={t(\"insights\")} />\n  );\n};\n\nexport default KeySuppliersNews;\n","import React, { useEffect, useRef } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { createChart } from \"lightweight-charts\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    chart: {\n      flex: 1,\n    },\n  })\n);\n\nconst ChartStockPriceData: React.FC<any> = ({ time, data }) => {\n  const classes = useStyles();\n  const refChart = useRef(null);\n\n  useEffect(() => {\n    const ele: any = refChart.current;\n    ele.innerHTML = \"\";\n\n    const chart = createChart(ele, {\n      width: ele.offsetWidth,\n      height: 240,\n    });\n\n    const areaSeries = chart.addAreaSeries({\n      topColor: \"rgba(255, 82, 82, 0.56)\",\n      bottomColor: \"rgba(255, 82, 82, 0.04)\",\n      lineColor: \"rgba(255, 82, 82, 1)\",\n      lineWidth: 2,\n    });\n\n    const length = (data[time] || []).length;\n    const data_chart = [];\n    if (length > 0) {\n      for (let i = 0; i < length; i++) {\n        const datum = data[time][i];\n        if (datum) {\n          data_chart.push({ time: datum.Time, value: datum.Value });\n        }\n      }\n    }\n    chart.timeScale().resetTimeScale();\n    chart.timeScale().fitContent();\n    areaSeries.setData(data_chart);\n  }, [time, data]);\n\n  return <div className={classes.chart} ref={refChart}></div>;\n};\n\nexport default ChartStockPriceData;\n","import { useCallback, useEffect } from \"react\";\nimport { useRecoilState } from \"recoil\";\n\nimport { apiStockPrices } from \"services/analytics.service\";\nimport { chartStockPrice } from \"./third-party-risk.atom\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useChartStockPriceHook = (name: string) => {\n  const { t } = useTranslation();\n  const [localComp, setLocalComp] = useRecoilState<any>(chartStockPrice);\n\n  const handleTimeChange = useCallback(\n    (time: string) => {\n      setLocalComp((prevState: any) => ({\n        ...prevState,\n        time,\n      }));\n    },\n    [setLocalComp]\n  );\n\n  const fetchMyAPI = useCallback(\n    async (name) => {\n      setLocalComp((prevState: any) => ({\n        ...prevState,\n        isLoading: true,\n      }));\n\n      let data: any = {};\n      try {\n        data = await apiStockPrices(name);\n      } catch (e) {\n        console.log(\n          \"Nguyen C: subcategories.component.tsx, F: e, N: error \",\n          e\n        );\n      }\n\n      const times = Object.keys(data);\n      const time = times.length > 0 ? times[0] : null;\n\n      setLocalComp((prevState: any) => ({\n        ...prevState,\n        isLoading: false,\n        isFirstLoad: false,\n        times,\n        time,\n        data,\n      }));\n    },\n    [setLocalComp]\n  );\n\n  useEffect(() => {\n    if (!name || name.length < 1) return;\n\n    fetchMyAPI(name[0]).then();\n  }, [name, fetchMyAPI]);\n\n  return {\n    t,\n    data: localComp.data,\n    time: localComp.time,\n    times: localComp.times,\n    loading: localComp.isLoading,\n    handleTimeChange,\n  };\n};\n\nexport default useChartStockPriceHook;\n","import React from \"react\";\n\nimport { ProgressLoading } from \"components/ui-own\";\nimport { Button, ButtonGroup, Typography } from \"components/ui-libraries\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport ChartStockPriceData from \"./chart-stock-price-data.component\";\n\nimport useChartStockPriceHook from \"./chart-stock-price.hook\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      width: \"100%\",\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      marginBottom: theme.spacing(3),\n    },\n    chart: {\n      flex: 1,\n    },\n    time: {\n      fontSize: \"0.75em\",\n    },\n  })\n);\n\nconst ChartStockPrice: React.FC<any> = ({ name }) => {\n  const classes = useStyles();\n  const {\n    t,\n    time,\n    data,\n    times,\n    loading,\n    handleTimeChange,\n  } = useChartStockPriceHook(name);\n\n  if (loading) return <ProgressLoading />;\n\n  return (\n    <div className={classes.container}>\n      <Typography variant={\"h6\"} align={\"center\"} gutterBottom>\n        {t(\"historical_stock_price\")}\n      </Typography>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n        {times.map((e: any, i: number) => (\n          <Button\n            onClick={() => {\n              handleTimeChange(e);\n            }}\n            color={e === time ? \"secondary\" : \"default\"}\n            className={classes.time}\n            key={i}\n          >\n            {e}\n          </Button>\n        ))}\n      </ButtonGroup>\n      <ChartStockPriceData time={time} data={data} />\n    </div>\n  );\n};\n\nexport default ChartStockPrice;\n","import React, { useEffect, useRef } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { createChart } from \"lightweight-charts\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    chart: {\n      flex: 1,\n    },\n  })\n);\n\nconst ChartStockPriceData: React.FC<any> = ({ time, data }) => {\n  const classes = useStyles();\n  const refChart = useRef(null);\n\n  useEffect(() => {\n    const ele: any = refChart.current;\n    ele.innerHTML = \"\";\n\n    const chart = createChart(ele, {\n      width: ele.offsetWidth,\n      height: 240,\n    });\n\n    const areaSeries = chart.addAreaSeries({\n      topColor: \"rgba(76, 175, 80, 0.5)\",\n      lineColor: \"rgba(76, 175, 80, 1)\",\n      bottomColor: \"rgba(76, 175, 80, 0)\",\n      lineWidth: 2,\n    });\n\n    const length = (data[time] || []).length;\n    const data_chart = [];\n    if (length > 0) {\n      for (let i = 0; i < length; i++) {\n        const datum = data[time][i];\n        if (datum) {\n          data_chart.push({ time: datum.Time, value: datum.Value });\n        }\n      }\n    }\n    chart.timeScale().resetTimeScale();\n    chart.timeScale().fitContent();\n    areaSeries.setData(data_chart);\n  }, [time, data]);\n\n  return <div className={classes.chart} ref={refChart}></div>;\n};\n\nexport default ChartStockPriceData;\n","import { useCallback, useEffect } from \"react\";\nimport { useRecoilState } from \"recoil\";\n\nimport { apiSentiment } from \"services/analytics.service\";\nimport { chartSentiment } from \"./third-party-risk.atom\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useChartSentimentHook = (name: string) => {\n  const { t } = useTranslation();\n  const [localComp, setLocalComp] = useRecoilState<any>(chartSentiment);\n\n  const handleTimeChange = useCallback(\n    (time: string) => {\n      setLocalComp((prevState: any) => ({\n        ...prevState,\n        time,\n      }));\n    },\n    [setLocalComp]\n  );\n\n  const fetchMyAPI = useCallback(\n    async (name) => {\n      setLocalComp((prevState: any) => ({\n        ...prevState,\n        isLoading: true,\n      }));\n\n      let data: any = {};\n      try {\n        data = await apiSentiment(name);\n      } catch (e) {\n        console.log(\n          \"Nguyen C: subcategories.component.tsx, F: e, N: error \",\n          e\n        );\n      }\n\n      const times = Object.keys(data);\n      const time = times.length > 0 ? times[0] : null;\n\n      setLocalComp((prevState: any) => ({\n        ...prevState,\n        isLoading: false,\n        isFirstLoad: false,\n        times,\n        time,\n        data,\n      }));\n    },\n    [setLocalComp]\n  );\n\n  useEffect(() => {\n    if (!name || name.length < 1) return;\n\n    fetchMyAPI(name[0]).then();\n  }, [name, fetchMyAPI]);\n\n  return {\n    t,\n    data: localComp.data,\n    time: localComp.time,\n    times: localComp.times,\n    loading: localComp.isLoading,\n    handleTimeChange,\n  };\n};\n\nexport default useChartSentimentHook;\n","import React from \"react\";\n\nimport { ProgressLoading } from \"components/ui-own\";\nimport { Button, ButtonGroup, Typography } from \"components/ui-libraries\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport ChartSentimentData from \"./chart-sentiment-data.component\";\n\nimport useChartSentimentHook from \"./chart-sentiment.hook\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      width: \"100%\",\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      marginBottom: theme.spacing(3),\n    },\n    chart: {\n      flex: 1,\n    },\n    time: {\n      fontSize: \"0.75em\",\n    },\n  })\n);\n\nconst ChartSentiment: React.FC<any> = ({ name }) => {\n  const classes = useStyles();\n  const {\n    t,\n    time,\n    data,\n    times,\n    loading,\n    handleTimeChange,\n  } = useChartSentimentHook(name);\n\n  if (loading) return <ProgressLoading />;\n\n  return (\n    <div className={classes.container}>\n      <Typography variant={\"h6\"} align={\"center\"} gutterBottom>\n        {t(\"sentiment_analysis\")}\n      </Typography>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n        {times.map((e: any, i: number) => (\n          <Button\n            onClick={() => {\n              handleTimeChange(e);\n            }}\n            color={e === time ? \"secondary\" : \"default\"}\n            className={classes.time}\n            key={i}\n          >\n            {e}\n          </Button>\n        ))}\n      </ButtonGroup>\n      <ChartSentimentData time={time} data={data} />\n    </div>\n  );\n};\n\nexport default ChartSentiment;\n","import React, {useEffect} from \"react\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {useTranslation} from \"react-i18next\";\n\nimport {dataList} from \"atom/suppliers.atom\";\nimport {thirdPartyRisk} from \"atom\";\nimport {useRecoilState} from \"recoil\";\n\nimport {ContainerDiv, NewDetail} from \"components/ui-own\";\nimport {AppBar, Grid, Tab, Tabs, Typography,} from \"components/ui-libraries\";\n\nimport {apiGetAllSuppliers} from \"services/supplier.service\";\n\nimport BreakingNews from \"./breaking-news\";\nimport News from \"./key-suppliers-news\";\nimport ChartStockPrice from \"./chart-stock-price.component\";\nimport ChartSentiment from \"./chart-sentiment.component\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    filter: {},\n    chart: {\n      flex: \"0 0 250px\",\n    },\n    data: {\n      flex: 1,\n    },\n    news: {\n      height: \"100%\",\n    },\n    supName: {\n      marginRight: theme.spacing(1.5),\n      marginBottom: theme.spacing(1.5),\n    },\n    avatar: {\n      textTransform: \"uppercase\",\n    },\n    tabs: {\n      height: 34,\n      minHeight: 34,\n      marginBottom: theme.spacing(3),\n    },\n    tab: {\n      height: 34,\n      minHeight: 34,\n    },\n  })\n);\n\nconst ThirdPartyRisk: React.FC<any> = () => {\n  const styles = useStyles();\n  const { t } = useTranslation();\n  const [state, setSupNames] = useRecoilState<any>(thirdPartyRisk);\n  const [data, setData] = useRecoilState(dataList);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      return;\n    }\n\n    const fetchApi = async () => {\n      try {\n        const arr = await apiGetAllSuppliers();\n\n        const sups = arr.filter((e: any) => !!e.active);\n\n        setData(sups);\n\n        if (sups && sups.length > 0) {\n          setSupNames(() => ({\n            supNames: [sups[0].name],\n            tabIndex: 0,\n          }));\n        }\n      } catch (e) {\n        console.log(\"Nguyen C: index.tsx, F: fetchApi, N: e \", e);\n      }\n    };\n    fetchApi();\n  }, [data, setData,setSupNames]);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    const supplier: any = data[newValue];\n\n    setSupNames(() => ({\n      supNames: [supplier.name],\n      tabIndex: newValue,\n    }));\n  };\n\n  return (\n    <>\n      <NewDetail />\n      <ContainerDiv className={styles.container}>\n        <div className={styles.filter}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant={\"subtitle2\"}>\n                {t(\"supplier_management\")}\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <AppBar\n                color={\"default\"}\n                position={\"relative\"}\n                classes={{ root: styles.tabs }}\n              >\n                <Tabs\n                  scrollButtons=\"auto\"\n                  indicatorColor={\"primary\"}\n                  variant=\"scrollable\"\n                  classes={{ root: styles.tabs }}\n                  textColor=\"primary\"\n                  value={state.tabIndex}\n                  onChange={handleChange}\n                >\n                  {data &&\n                    data.map(\n                      (e: any, i: number) =>\n                        !!e.active && (\n                          <Tab key={i} classes={{ root: styles.tab }} label={e.name} />\n                        )\n                    )}\n                </Tabs>\n              </AppBar>\n            </Grid>\n          </Grid>\n        </div>\n        <div className={styles.chart}>\n          <Grid className={styles.news} container spacing={3}>\n            <Grid item xs={6}>\n              <ChartStockPrice name={state.supNames} />\n            </Grid>\n            <Grid item xs={6}>\n              <ChartSentiment name={state.supNames} />\n            </Grid>\n          </Grid>\n        </div>\n        <div className={styles.data}>\n          <Grid className={styles.news} container spacing={3}>\n            <Grid item xs={10}></Grid>\n            <Grid item xs={4} className={styles.news}>\n              <BreakingNews name={state.supNames} />\n            </Grid>\n            <Grid item xs={8} className={styles.news}>\n              <News name={state.supNames} />\n            </Grid>\n          </Grid>\n        </div>\n      </ContainerDiv>\n    </>\n  );\n};\n\nexport default ThirdPartyRisk;\n","import Dashboard from \"./third-party-risk.container\";\n\nexport default Dashboard;\n","import React, { useEffect, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { ContainerDiv } from \"components/ui-own/index\";\nimport { Typography, Skeleton } from \"components/ui-libraries\";\n\nimport {\n  CellMeasurer,\n  CellMeasurerCache,\n  List,\n  AutoSizer,\n} from \"react-virtualized\";\nimport classnames from \"classnames\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    title: {\n      paddingBottom: theme.spacing(1.5),\n    },\n    news: {\n      flex: 1,\n    },\n    row: {\n      paddingRight: theme.spacing(1.5),\n      paddingBottom: theme.spacing(1.5),\n    },\n    rowBody: {\n      cursor: \"pointer\",\n      padding: theme.spacing(1.5),\n      borderRadius: theme.shape.borderRadius * 2,\n      border: `1px solid ${theme.palette.divider}`,\n      backgroundColor: theme.palette.background.paper,\n      \"&:hover\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n    rowTitle: {\n      fontWeight: 500,\n      marginBottom: theme.spacing(1.5),\n    },\n  })\n);\n\nfunction truncate(input: string) {\n  if (input && input.length > 210) return input.substring(0, 210) + \"...\";\n  else return input;\n}\n\nconst News: React.FC<any> = ({\n  isLoading,\n  title,\n  data,\n  onClick,\n  classes,\n  renderRow,\n}) => {\n  const styles = useStyles();\n  const [cache] = useState(\n    new CellMeasurerCache({\n      minHeight: 50,\n      fixedWidth: true,\n    })\n  );\n\n  useEffect(() => {\n    if (isLoading) {\n      cache.clearAll();\n    }\n  }, [cache, isLoading]);\n\n  const _renderRow = ({ index, key, parent, style }: any) => {\n    const row = data[index];\n\n    return (\n      <CellMeasurer\n        cache={cache}\n        columnIndex={0}\n        key={key}\n        parent={parent}\n        rowIndex={index}\n      >\n        {({ measure, registerChild }: any) => {\n          const body = renderRow ? (\n            renderRow(row)\n          ) : (\n            <>\n              <Typography className={styles.rowTitle} variant=\"subtitle1\">\n                {row.title}\n              </Typography>\n              <Typography>{truncate(row.summarize_text)}</Typography>\n            </>\n          );\n\n          return (\n            <div\n              onLoad={measure}\n              ref={registerChild}\n              style={style}\n              className={classnames(styles.row, classes.row)}\n            >\n              <ContainerDiv\n                className={classnames(styles.rowBody, classes.rowBody)}\n                onClick={() => {\n                  if (onClick) onClick(row);\n                }}\n              >\n                {body}\n              </ContainerDiv>\n            </div>\n          );\n        }}\n      </CellMeasurer>\n    );\n  };\n\n  return (\n    <ContainerDiv className={classnames(styles.container, classes.container)}>\n      <Typography\n        variant=\"h6\"\n        className={classnames(styles.title, classes.title)}\n      >\n        {title}\n      </Typography>\n      <div className={styles.news}>\n        <AutoSizer>\n          {({ height, width }: any) => {\n            if (isLoading) {\n              return (\n                <div style={{ height, width, padding: 12 }}>\n                  <Skeleton\n                    variant=\"rect\"\n                    width={\"100%\"}\n                    height={100}\n                    style={{ marginBottom: 12, borderRadius: 8 }}\n                  />\n                  <Skeleton\n                    variant=\"rect\"\n                    width={\"100%\"}\n                    height={100}\n                    style={{ borderRadius: 8 }}\n                  />\n                </div>\n              );\n            }\n\n            return (\n              <List\n                rowCount={data.length}\n                className=\"scrollbar\"\n                deferredMeasurementCache={cache}\n                rowHeight={cache.rowHeight}\n                height={height}\n                width={width}\n                rowRenderer={_renderRow}\n              />\n            );\n          }}\n        </AutoSizer>\n      </div>\n    </ContainerDiv>\n  );\n};\n\nNews.defaultProps = {\n  data: [],\n  classes: {},\n};\n\nexport default News;\n","import News from \"./news.component\";\n\nexport default News;\n","import { callApi } from \"utils/service.util\";\n\nimport { API_ROOT } from \"constants/common\";\n\nexport async function apiGetAllAnalytics() {\n  const res: any = await callApi({\n    url: `${API_ROOT}/analytics`,\n  });\n\n  return res;\n}\n\nexport async function apiDefaultAnalytic(category_name?: any, id?: any) {\n  const res: any = await callApi({\n    url: `${API_ROOT}/graphs/${category_name}`,\n    params: { id },\n  });\n\n  return res.data[0];\n}\n\nexport async function apiAnalytic(id?: any) {\n  const res: any = await callApi({\n    url: `${API_ROOT}/graphs/analytics`,\n    params: { id },\n  });\n\n  return res.data[0];\n}\n\nexport async function apiStockPrices(supplier?: any) {\n  const res: any = await callApi({\n    url: `${API_ROOT}/stockprices`,\n    params: { supplier },\n  });\n\n  return res.data[0];\n}\n\nexport async function apiSentiment(supplier?: any) {\n  const res: any = await callApi({\n    url: `${API_ROOT}/sentiments`,\n    params: { supplier },\n  });\n\n  return res.data[0];\n}\n","import { callApi } from \"utils/service.util\";\n\nimport { API_MODULES, API_ROOT } from \"constants/common\";\n\nexport async function apiGetAllSuppliers(params: any = {}) {\n  const res: any = await callApi({\n    url: `${API_ROOT}/${API_MODULES.Suppliers}`,\n    params,\n  });\n\n  return res.data;\n}\n\nexport async function apiPutSupplier(data: any = {}) {\n  const res: any = await callApi({\n    method: \"PUT\",\n    url: `${API_ROOT}/${API_MODULES.Suppliers}`,\n    data,\n  });\n\n  return res.data;\n}\n\nexport async function apiGetKeySupplierNews(params: any = {}) {\n  const res: any = await callApi({\n    url: `${API_ROOT}/news/breakingnews`,\n    params,\n  });\n\n  return res.data;\n}\n\nexport async function apiGetThirdRiskManagements(data: any = {}) {\n  const res: any = await callApi({\n    method: \"POST\",\n    url: `${API_ROOT}/news/${API_MODULES.Suppliers}`,\n    data,\n  });\n\n  return res.data;\n}\n","import { callApi } from \"../utils/service.util\";\nimport { API_ROOT, API_MODULES } from \"../constants/common\";\n\nexport async function apiGetBreakingNews(params: any = {}) {\n  const res: any = await callApi({\n    url: `${API_ROOT}/news/${API_MODULES.BreakingNews}`,\n    params,\n  });\n  return res.data;\n}\n\nexport async function apiGetBreakingNewsByNameList(data: any = {}) {\n  const res: any = await callApi({\n    url: `${API_ROOT}/news/${API_MODULES.BreakingNews}`,\n    method: \"POST\",\n    data,\n  });\n  return res.data;\n}\n","// @ts-ignore\nimport {atom} from \"recoil\";\n\nexport enum SupplierManagement {\n  SUPPLIER_NAME = \"SUPPLIER_NAME\",\n  THIRD_PARTY_RISK = \"THIRD_PARTY_RISK\",\n}\n\nexport const supplierManagement = atom({\n  key: SupplierManagement.SUPPLIER_NAME, // unique ID (with respect to other atoms/selectors)\n  default: \"\", // default value (aka initial value)\n});\n\nexport const thirdPartyRisk = atom({\n  key: SupplierManagement.THIRD_PARTY_RISK, // unique ID (with respect to other atoms/selectors)\n  default: {\n    tabIndex: 0,\n    supNames: [],\n  }, // default value (aka initial value)\n});\n"],"sourceRoot":""}