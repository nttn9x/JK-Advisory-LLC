{"version":3,"sources":["atom/suppliers.atom.tsx","pages/private/third-party-risk/third-party-risk.atom.tsx","pages/private/third-party-risk/breaking-news/breaking-news.component.tsx","pages/private/third-party-risk/breaking-news/index.tsx","pages/private/third-party-risk/key-suppliers-news/index.tsx","pages/private/third-party-risk/key-suppliers-news/key-suppliers-news.component.tsx","pages/private/third-party-risk/chart-stock-price.component.tsx","pages/private/third-party-risk/chart-sentiment.component.tsx","pages/private/third-party-risk/third-party-risk.container.tsx","pages/private/third-party-risk/index.tsx","components/ui-own/news/news.component.tsx","components/ui-own/news/index.tsx","services/analytics.service.tsx","services/supplier.service.tsx","services/breaking_news.service.tsx","atom/index.tsx"],"names":["Dashboard","ChartStockPrice","dataList","atom","key","DATAS_VALUE","default","selector","DATAS_SELECT","get","useStyles","makeStyles","theme","createStyles","container","borderRadius","shape","backgroundColor","palette","grey","title","margin","spacing","paddingLeft","borderBottom","divider","row","rowBody","border","News","name","t","useTranslation","styles","useState","data","isLoading","isFirstLoad","localComp","setLocalComp","actionShowDialog","useProviderContext","fetchMyAPI","useCallback","supplier_name","a","prevState","apiGetBreakingNewsByNameList","console","log","useEffect","then","onClick","classes","apiGetThirdRiskManagements","chartStockPrice","CHART_STOCKPRICE_VALUE","chartSentiment","CHART_SENTIMENT_VALUE","useRecoilState","apiStockPrices","subtitle","description","labels","label","colors","options","fontSize","fontStyle","display","text","length","setTimeout","style","width","flex","marginBottom","datasets","lineTension","legend","responsive","ChartSentiment","apiSentiment","borderColor","fill","elements","line","tension","height","flexDirection","filter","chart","news","supName","marginRight","avatar","textTransform","tabs","minHeight","tab","ThirdPartyRisk","thirdPartyRisk","state","setSupNames","setData","apiGetAllSuppliers","arr","sups","e","active","supNames","tabIndex","fetchApi","className","item","xs","variant","color","position","root","scrollButtons","indicatorColor","textColor","value","onChange","event","newValue","supplier","map","i","paddingBottom","paddingRight","cursor","padding","background","paper","action","hover","rowTitle","fontWeight","renderRow","CellMeasurerCache","fixedWidth","cache","clearAll","_renderRow","index","parent","columnIndex","rowIndex","input","measure","registerChild","body","summarize_text","substring","onLoad","ref","classnames","rowCount","deferredMeasurementCache","rowHeight","rowRenderer","defaultProps","apiDefaultAnalytic","category_name","id","callApi","url","API_ROOT","params","res","apiAnalytic","API_MODULES","Suppliers","apiPutSupplier","method","apiGetKeySupplierNews","apiGetBreakingNews","BreakingNews","SupplierManagement","supplierManagement","SUPPLIER_NAME","THIRD_PARTY_RISK"],"mappings":"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","file":"static/js/7.6569a2b7.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\n\nexport enum Dashboard {\n  DATAS_SELECT = \"DATAS_SELECT\",\n  DATAS_VALUE = \"DATAS_VALUE\",\n}\n\nexport const dataList = atom({\n  key: Dashboard.DATAS_VALUE, // unique ID (with respect to other atoms/selectors)\n  default: [], // default value (aka initial value)\n});\n\nexport const selectDataList = selector({\n  key: Dashboard.DATAS_SELECT, // unique ID (with respect to other atoms/selectors)\n  get: ({ get }: any) => {\n    const data = get(dataList);\n\n    return data;\n  },\n});\n","// @ts-ignore\nimport { atom } from \"recoil\";\n\nexport enum ChartStockPrice {\n  CHART_STOCKPRICE_VALUE = \"CHART_STOCKPRICE_VALUE\",\n  CHART_SENTIMENT_VALUE = \"CHART_SENTIMENT_VALUE\",\n}\n\nexport const chartStockPrice = atom({\n  key: ChartStockPrice.CHART_STOCKPRICE_VALUE, // unique ID (with respect to other atoms/selectors)\n  default: { isLoading: true, isFirstLoad: true, data: [] }, // default value (aka initial value)\n});\n\nexport const chartSentiment = atom({\n  key: ChartStockPrice.CHART_SENTIMENT_VALUE, // unique ID (with respect to other atoms/selectors)\n  default: { isLoading: true, isFirstLoad: true, data: [] }, // default value (aka initial value)\n});\n","import React, { useEffect, useCallback, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport News from \"components/ui-own/news\";\n\nimport { apiGetBreakingNewsByNameList } from \"services/breaking_news.service\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { useProviderContext } from \"../../../../components/ui-own/new_detail/new_detail.context\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.grey[\"100\"],\n    },\n    title: {\n      margin: theme.spacing(1.5),\n      paddingLeft: theme.spacing(1.5),\n      borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    row: {\n      paddingLeft: theme.spacing(1.5),\n    },\n    rowBody: {\n      border: \"unset\",\n      backgroundColor: \"unset\",\n    },\n  })\n);\n\nconst BreakingNews: React.FC<any> = ({ name }) => {\n  const { t } = useTranslation();\n  const styles = useStyles();\n  const [localComp, setLocalComp] = useState({\n    data: [],\n    isLoading: false,\n    isFirstLoad: true,\n  });\n  const { actionShowDialog } = useProviderContext();\n\n  const fetchMyAPI = useCallback(async (supplier_name) => {\n    setLocalComp((prevState: any) => ({\n      ...prevState,\n      isLoading: true,\n    }));\n\n    let data: any = [];\n    try {\n      data = await apiGetBreakingNewsByNameList({\n        supplier_name,\n      });\n    } catch (e) {\n      console.log(\"Nguyen C: subcategories.component.tsx, F: e, N: error \", e);\n    }\n\n    setLocalComp((prevState: any) => ({\n      ...prevState,\n      data,\n      isLoading: false,\n      isFirstLoad: false,\n    }));\n  }, []);\n\n  useEffect(() => {\n    if (!name) {\n      return;\n    }\n    fetchMyAPI(name).then();\n  }, [name, fetchMyAPI]);\n\n  return (\n    <News\n      {...localComp}\n      onClick={actionShowDialog}\n      title={t(\"breaking_news\")}\n      classes={{\n        container: styles.container,\n        title: styles.title,\n        row: styles.row,\n        rowBody: styles.rowBody,\n      }}\n    />\n  );\n};\n\nexport default BreakingNews;\n","import News from \"./breaking-news.component\";\n\nexport default News;\n","import News from \"./key-suppliers-news.component\";\n\nexport default News;\n","import React, { useEffect, useCallback, useState } from \"react\";\n\nimport News from \"components/ui-own/news\";\n\nimport { apiGetThirdRiskManagements } from \"services/supplier.service\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { useProviderContext } from \"../../../../components/ui-own/new_detail/new_detail.context\";\n\nconst KeySuppliersNews: React.FC<any> = ({ name }) => {\n  const { t } = useTranslation();\n  const [localComp, setLocalComp] = useState({\n    data: [],\n    isLoading: false,\n    isFirstLoad: true,\n  });\n  const { actionShowDialog } = useProviderContext();\n\n  const fetchMyAPI = useCallback(async (supplier_name) => {\n    setLocalComp((prevState: any) => ({\n      ...prevState,\n      isLoading: true,\n    }));\n\n    let data: any = [];\n    try {\n      data = await apiGetThirdRiskManagements({\n        supplier_name,\n      });\n    } catch (e) {\n      console.log(\"Nguyen C: subcategories.component.tsx, F: e, N: error \", e);\n    }\n\n    setLocalComp((prevState: any) => ({\n      ...prevState,\n      data,\n      isLoading: false,\n      isFirstLoad: false,\n    }));\n  }, []);\n\n  useEffect(() => {\n    if (!name) {\n      return;\n    }\n    fetchMyAPI(name).then();\n  }, [name, fetchMyAPI]);\n\n  return (\n    <News {...localComp} onClick={actionShowDialog} title={t(\"insights\")} />\n  );\n};\n\nexport default KeySuppliersNews;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { Line } from \"react-chartjs-2\";\n\nimport { apiStockPrices } from \"services/analytics.service\";\n\nimport { ProgressLoading } from \"components/ui-own\";\nimport { chartStockPrice } from \"./third-party-risk.atom\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ChartStockPrice: React.FC<any> = ({ name }) => {\n  const { t } = useTranslation();\n  const [localComp, setLocalComp] = useRecoilState<any>(chartStockPrice);\n\n  const fetchMyAPI = useCallback(\n    async (name) => {\n      setLocalComp((prevState: any) => ({\n        ...prevState,\n        isLoading: true,\n      }));\n\n      let data: any = {};\n      try {\n        data = await apiStockPrices(name);\n      } catch (e) {\n        console.log(\n          \"Nguyen C: subcategories.component.tsx, F: e, N: error \",\n          e\n        );\n      }\n      setLocalComp((prevState: any) => ({\n        ...prevState,\n        subtitle: data.subtitle,\n        description: data.description,\n        data: data[\"data point\"],\n        labels: data.label,\n        colors: \"#ff6384\",\n        options: {\n          title: {\n            fontSize: 17,\n            fontStyle: \"bold\",\n            display: true,\n            text: t(\"history_stock_price\"),\n          },\n        },\n        isLoading: false,\n        isFirstLoad: false,\n      }));\n    },\n    [t, setLocalComp]\n  );\n\n  useEffect(() => {\n    if (!name || name.length < 1) return;\n    setTimeout(() => {\n      fetchMyAPI(name[0]).then();\n    }, 500);\n  }, [name, fetchMyAPI]);\n\n  if (localComp.isLoading) {\n    return <ProgressLoading />;\n  }\n\n  return (\n    <>\n      <div style={{ width: \"100%\", flex: 1, margin: \"auto\", marginBottom: 8 }}>\n        <Line\n          data={{\n            labels: localComp.labels,\n            datasets: [\n              {\n                data: localComp.data,\n                lineTension: 0,\n                backgroundColor: localComp.colors,\n              },\n            ],\n          }}\n          options={{\n            legend: {\n              labels: {\n                fontSize: 0,\n              },\n            },\n            responsive: true,\n            ...localComp.options,\n          }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ChartStockPrice;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { Line } from \"react-chartjs-2\";\n\nimport { apiSentiment } from \"services/analytics.service\";\n\nimport { ProgressLoading } from \"components/ui-own\";\nimport { chartSentiment } from \"./third-party-risk.atom\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ChartSentiment: React.FC<any> = ({ name }) => {\n  const { t } = useTranslation();\n  const [localComp, setLocalComp] = useRecoilState<any>(chartSentiment);\n\n  const fetchMyAPI = useCallback(\n    async (name) => {\n      setLocalComp((prevState: any) => ({\n        ...prevState,\n        isLoading: true,\n      }));\n\n      let data: any = {};\n      try {\n        data = await apiSentiment(name);\n      } catch (e) {\n        console.log(\n          \"Nguyen C: subcategories.component.tsx, F: e, N: error \",\n          e\n        );\n      }\n      setLocalComp((prevState: any) => ({\n        ...prevState,\n        subtitle: data.subtitle,\n        description: data.description,\n        data: data[\"data point\"],\n        labels: data.label,\n        colors: \"#ff6384\",\n        borderColor: \"#ff6384\",\n        options: {\n          title: {\n            fontSize: 17,\n            fontStyle: \"bold\",\n            display: true,\n            text: t(\"sentiment_analysis\"),\n          },\n        },\n        isLoading: false,\n        isFirstLoad: false,\n      }));\n    },\n    [t, setLocalComp]\n  );\n\n  useEffect(() => {\n    if (!name || name.length < 1) return;\n    setTimeout(() => {\n      fetchMyAPI(name[0]).then();\n    }, 500);\n  }, [name, fetchMyAPI]);\n\n  if (localComp.isLoading) {\n    return <ProgressLoading />;\n  }\n\n  return (\n    <>\n      <div style={{ width: \"100%\", flex: 1, margin: \"auto\", marginBottom: 8 }}>\n        <Line\n          data={{\n            labels: localComp.labels,\n            datasets: [\n              {\n                data: localComp.data,\n                fill: false,\n                borderColor: \"blue\",\n                lineTension: 0,\n              },\n            ],\n          }}\n          options={{\n            elements: {\n              line: {\n                tension: 0, // disables bezier curves\n              },\n            },\n            legend: {\n              labels: {\n                fontSize: 0,\n              },\n            },\n            responsive: true,\n            ...localComp.options,\n          }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ChartSentiment;\n","import React, {useEffect} from \"react\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {useTranslation} from \"react-i18next\";\n\nimport {dataList} from \"atom/suppliers.atom\";\nimport {thirdPartyRisk} from \"atom\";\nimport {useRecoilState} from \"recoil\";\n\nimport {ContainerDiv, NewDetail} from \"components/ui-own\";\nimport {AppBar, Grid, Tab, Tabs, Typography,} from \"components/ui-libraries\";\n\nimport {apiGetAllSuppliers} from \"services/supplier.service\";\n\nimport BreakingNews from \"./breaking-news\";\nimport News from \"./key-suppliers-news\";\nimport ChartStockPrice from \"./chart-stock-price.component\";\nimport ChartSentiment from \"./chart-sentiment.component\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    filter: {},\n    chart: {\n      flex: \"0 0 250px\",\n    },\n    data: {\n      flex: 1,\n    },\n    news: {\n      height: \"100%\",\n    },\n    supName: {\n      marginRight: theme.spacing(1.5),\n      marginBottom: theme.spacing(1.5),\n    },\n    avatar: {\n      textTransform: \"uppercase\",\n    },\n    tabs: {\n      height: 34,\n      minHeight: 34,\n      marginBottom: theme.spacing(3),\n    },\n    tab: {\n      height: 34,\n      minHeight: 34,\n    },\n  })\n);\n\nconst ThirdPartyRisk: React.FC<any> = () => {\n  const styles = useStyles();\n  const { t } = useTranslation();\n  const [state, setSupNames] = useRecoilState<any>(thirdPartyRisk);\n  const [data, setData] = useRecoilState(dataList);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      return;\n    }\n\n    const fetchApi = async () => {\n      try {\n        const arr = await apiGetAllSuppliers();\n\n        const sups = arr.filter((e: any) => !!e.active);\n\n        setData(sups);\n\n        if (sups && sups.length > 0) {\n          setSupNames(() => ({\n            supNames: [sups[0].name],\n            tabIndex: 0,\n          }));\n        }\n      } catch (e) {\n        console.log(\"Nguyen C: index.tsx, F: fetchApi, N: e \", e);\n      }\n    };\n    fetchApi();\n  }, [data, setData,setSupNames]);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    const supplier: any = data[newValue];\n\n    setSupNames(() => ({\n      supNames: [supplier.name],\n      tabIndex: newValue,\n    }));\n  };\n\n  return (\n    <>\n      <NewDetail />\n      <ContainerDiv className={styles.container}>\n        <div className={styles.filter}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant={\"subtitle2\"}>\n                {t(\"supplier_management\")}\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <AppBar\n                color={\"default\"}\n                position={\"relative\"}\n                classes={{ root: styles.tabs }}\n              >\n                <Tabs\n                  scrollButtons=\"auto\"\n                  indicatorColor={\"primary\"}\n                  variant=\"scrollable\"\n                  classes={{ root: styles.tabs }}\n                  textColor=\"primary\"\n                  value={state.tabIndex}\n                  onChange={handleChange}\n                >\n                  {data &&\n                    data.map(\n                      (e: any, i: number) =>\n                        !!e.active && (\n                          <Tab key={i} classes={{ root: styles.tab }} label={e.name} />\n                        )\n                    )}\n                </Tabs>\n              </AppBar>\n            </Grid>\n          </Grid>\n        </div>\n        <div className={styles.chart}>\n          <Grid className={styles.news} container spacing={3}>\n            <Grid item xs={6}>\n              <ChartStockPrice name={state.supNames} />\n            </Grid>\n            <Grid item xs={6}>\n              <ChartSentiment name={state.supNames} />\n            </Grid>\n          </Grid>\n        </div>\n        <div className={styles.data}>\n          <Grid className={styles.news} container spacing={3}>\n            <Grid item xs={10}></Grid>\n            <Grid item xs={4} className={styles.news}>\n              <BreakingNews name={state.supNames} />\n            </Grid>\n            <Grid item xs={8} className={styles.news}>\n              <News name={state.supNames} />\n            </Grid>\n          </Grid>\n        </div>\n      </ContainerDiv>\n    </>\n  );\n};\n\nexport default ThirdPartyRisk;\n","import Dashboard from \"./third-party-risk.container\";\n\nexport default Dashboard;\n","import React, { useEffect, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { ContainerDiv } from \"components/ui-own/index\";\nimport { Typography, Skeleton } from \"components/ui-libraries\";\n\nimport {\n  CellMeasurer,\n  CellMeasurerCache,\n  List,\n  AutoSizer,\n} from \"react-virtualized\";\nimport classnames from \"classnames\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    title: {\n      paddingBottom: theme.spacing(1.5),\n    },\n    news: {\n      flex: 1,\n    },\n    row: {\n      paddingRight: theme.spacing(1.5),\n      paddingBottom: theme.spacing(1.5),\n    },\n    rowBody: {\n      cursor: \"pointer\",\n      padding: theme.spacing(1.5),\n      borderRadius: theme.shape.borderRadius * 2,\n      border: `1px solid ${theme.palette.divider}`,\n      backgroundColor: theme.palette.background.paper,\n      \"&:hover\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n    rowTitle: {\n      fontWeight: 500,\n      marginBottom: theme.spacing(1.5),\n    },\n  })\n);\n\nfunction truncate(input: string) {\n  if (input && input.length > 210) return input.substring(0, 210) + \"...\";\n  else return input;\n}\n\nconst News: React.FC<any> = ({\n  isLoading,\n  title,\n  data,\n  onClick,\n  classes,\n  renderRow,\n}) => {\n  const styles = useStyles();\n  const [cache] = useState(\n    new CellMeasurerCache({\n      minHeight: 50,\n      fixedWidth: true,\n    })\n  );\n\n  useEffect(() => {\n    if (isLoading) {\n      cache.clearAll();\n    }\n  }, [cache, isLoading]);\n\n  const _renderRow = ({ index, key, parent, style }: any) => {\n    const row = data[index];\n\n    return (\n      <CellMeasurer\n        cache={cache}\n        columnIndex={0}\n        key={key}\n        parent={parent}\n        rowIndex={index}\n      >\n        {({ measure, registerChild }: any) => {\n          const body = renderRow ? (\n            renderRow(row)\n          ) : (\n            <>\n              <Typography className={styles.rowTitle} variant=\"subtitle1\">\n                {row.title}\n              </Typography>\n              <Typography>{truncate(row.summarize_text)}</Typography>\n            </>\n          );\n\n          return (\n            <div\n              onLoad={measure}\n              ref={registerChild}\n              style={style}\n              className={classnames(styles.row, classes.row)}\n            >\n              <ContainerDiv\n                className={classnames(styles.rowBody, classes.rowBody)}\n                onClick={() => {\n                  if (onClick) onClick(row);\n                }}\n              >\n                {body}\n              </ContainerDiv>\n            </div>\n          );\n        }}\n      </CellMeasurer>\n    );\n  };\n\n  return (\n    <ContainerDiv className={classnames(styles.container, classes.container)}>\n      <Typography\n        variant=\"h6\"\n        className={classnames(styles.title, classes.title)}\n      >\n        {title}\n      </Typography>\n      <div className={styles.news}>\n        <AutoSizer>\n          {({ height, width }: any) => {\n            if (isLoading) {\n              return (\n                <div style={{ height, width, padding: 12 }}>\n                  <Skeleton\n                    variant=\"rect\"\n                    width={\"100%\"}\n                    height={100}\n                    style={{ marginBottom: 12, borderRadius: 8 }}\n                  />\n                  <Skeleton\n                    variant=\"rect\"\n                    width={\"100%\"}\n                    height={100}\n                    style={{ borderRadius: 8 }}\n                  />\n                </div>\n              );\n            }\n\n            return (\n              <List\n                rowCount={data.length}\n                className=\"scrollbar\"\n                deferredMeasurementCache={cache}\n                rowHeight={cache.rowHeight}\n                height={height}\n                width={width}\n                rowRenderer={_renderRow}\n              />\n            );\n          }}\n        </AutoSizer>\n      </div>\n    </ContainerDiv>\n  );\n};\n\nNews.defaultProps = {\n  data: [],\n  classes: {},\n};\n\nexport default News;\n","import News from \"./news.component\";\n\nexport default News;\n","import { callApi } from \"utils/service.util\";\n\nimport { API_ROOT } from \"constants/common\";\n\nexport async function apiGetAllAnalytics() {\n  const res: any = await callApi({\n    url: `${API_ROOT}/analytics`,\n  });\n\n  return res;\n}\n\nexport async function apiDefaultAnalytic(category_name?: any, id?: any) {\n  const res: any = await callApi({\n    url: `${API_ROOT}/graphs/${category_name}`,\n    params: { id },\n  });\n\n  return res.data[0];\n}\n\nexport async function apiAnalytic(id?: any) {\n  const res: any = await callApi({\n    url: `${API_ROOT}/graphs/analytics`,\n    params: { id },\n  });\n\n  return res.data[0];\n}\n\nexport async function apiStockPrices(supplier?: any) {\n  const res: any = await callApi({\n    url: `${API_ROOT}/stockprices`,\n    params: { supplier },\n  });\n\n  return res.data[0];\n}\n\nexport async function apiSentiment(supplier?: any) {\n  const res: any = await callApi({\n    url: `${API_ROOT}/sentiments`,\n    params: { supplier },\n  });\n\n  return res.data[0];\n}\n","import { callApi } from \"utils/service.util\";\n\nimport { API_MODULES, API_ROOT } from \"constants/common\";\n\nexport async function apiGetAllSuppliers(params: any = {}) {\n  const res: any = await callApi({\n    url: `${API_ROOT}/${API_MODULES.Suppliers}`,\n    params,\n  });\n\n  return res.data;\n}\n\nexport async function apiPutSupplier(data: any = {}) {\n  const res: any = await callApi({\n    method: \"PUT\",\n    url: `${API_ROOT}/${API_MODULES.Suppliers}`,\n    data,\n  });\n\n  return res.data;\n}\n\nexport async function apiGetKeySupplierNews(params: any = {}) {\n  const res: any = await callApi({\n    url: `${API_ROOT}/news/${API_MODULES.Suppliers}`,\n    params,\n  });\n\n  return res.data;\n}\n\nexport async function apiGetThirdRiskManagements(data: any = {}) {\n  const res: any = await callApi({\n    method: \"POST\",\n    url: `${API_ROOT}/news/${API_MODULES.Suppliers}`,\n    data,\n  });\n\n  return res.data;\n}\n","import { callApi } from \"../utils/service.util\";\nimport { API_ROOT, API_MODULES } from \"../constants/common\";\n\nexport async function apiGetBreakingNews(params: any = {}) {\n  const res: any = await callApi({\n    url: `${API_ROOT}/news/${API_MODULES.BreakingNews}`,\n    params,\n  });\n  return res.data;\n}\n\nexport async function apiGetBreakingNewsByNameList(data: any = {}) {\n  const res: any = await callApi({\n    url: `${API_ROOT}/news/${API_MODULES.BreakingNews}`,\n    method: \"POST\",\n    data,\n  });\n  return res.data;\n}\n","// @ts-ignore\nimport {atom} from \"recoil\";\n\nexport enum SupplierManagement {\n  SUPPLIER_NAME = \"SUPPLIER_NAME\",\n  THIRD_PARTY_RISK = \"THIRD_PARTY_RISK\",\n}\n\nexport const supplierManagement = atom({\n  key: SupplierManagement.SUPPLIER_NAME, // unique ID (with respect to other atoms/selectors)\n  default: \"\", // default value (aka initial value)\n});\n\nexport const thirdPartyRisk = atom({\n  key: SupplierManagement.THIRD_PARTY_RISK, // unique ID (with respect to other atoms/selectors)\n  default: {\n    tabIndex: 0,\n    supNames: [],\n  }, // default value (aka initial value)\n});\n"],"sourceRoot":""}